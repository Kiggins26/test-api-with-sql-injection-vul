name: Replace get_stuff endpoint

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace get_stuff endpoint in-place
        shell: bash
        run: |
          set -euo pipefail
          file="app/main.py"

          # Create the replacement snippet in a temp file
          cat > get_stuff_snippet.py <<'EOF'
@app.get("/get_stuff")
def get_stuff(num_of_rows: int = Query(5, ge=1, le=50)):
    try:
        with sqlite3.connect(DB_FILE) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT public_id FROM stuff LIMIT ?", (num_of_rows,))
            rows = cursor.fetchall()

        results = [row[0] for row in rows]
        return {"public_ids": results}

    except Exception as e:
        raise HTTPException(status_code=400, detail=f"Error: {e}")
EOF

          # If the decorator exists, replace the block starting at the decorator
          if grep -q '^@app.get("/get_stuff")' "$file"; then
            awk -v sfile="get_stuff_snippet.py" '
              BEGIN { in=0 }
              /^@app.get\("\/get_stuff"\)/ {
                in=1;
                # print snippet file content
                while((getline line < sfile) > 0) print line;
                next
              }
              in==1 {
                if(/^@/ || /^def /) { in=0; print; }
                else next
              }
              { print }
            ' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
          else
            # If not present, append the snippet to the end of the file
            echo "" >> "$file"
            cat get_stuff_snippet.py >> "$file"
          fi

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create branch, commit and push (only if changes)
        shell: bash
        run: |
          set -euo pipefail
          file="app/main.py"
          branch="refactor/replace-get-stuff-endpoint"

          git fetch origin main:main || true
          git checkout -B "$branch"

          git add "$file" || true

          if git diff --cached --quiet; then
            echo "No changes detected in $file. Exiting without creating a PR."
            exit 0
          fi

          git commit -m "Refactor: replace get_stuff endpoint with safer version"
          git push -u origin "$branch" --force

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: refactor/replace-get-stuff-endpoint
          title: "Refactor: Replace get_stuff endpoint"
          body: |
            This PR replaces the `get_stuff` endpoint with a safer version that:
            - Uses `Query` validation (`int`, min=1, max=50).
            - Avoids raw SQL injection by using parameterized queries.
            - Returns structured JSON instead of a raw string.

